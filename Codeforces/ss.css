#include <stdio.h>
#include <bits/stdc++.h>
#include <iostream>
using namespace std;
#include <algorithm>
int calpos(int elem, int arr[],int n){
    int i=0;
    while (i < n)
    {
        if (arr[i] == elem) {
            break;
        }
        i++;
    }
    return i;
}

int main()
{
    int t;
    cin>>t;
    while(t--){
        int N,M,Nsum=0,Msum=0,Ninput=0,Minput=0;
        cin>>N>>M;
        vector<int> a,aa; 
  
        for (int i = 0; i <N; i++) {
            cin>>Ninput;
            // cout<<Ninput<<"\n";
            a.push_back(Ninput);
            Nsum+=Ninput;
        }
        for (int i = 0; i <M; i++) {
            cin>>Minput;
            // cout<<Minput<<"\n";
            a.push_back(Minput);
            Msum+=Minput;
        }
        // cout<<Msum<<" "<<Nsum<<" ";
        int count=0,Nmin=0,Mmax=0,Npos=0,Mpos=0,upNsum=Nsum,upMsum=Msum;
        while(upNsum<upMsum){
            // Nmin=*min_element(a, a + N)-a;
            // Mmax=*max_element(aa, aa + M)-aa;
            Npos=max_element(a.begin(),a.end()) - a.begin();
            Mpos = max_element(aa.begin(),aa.end()) - aa.begin();
            int temp;
            temp = a[Nmin];
            a[Npos]=aa[Mmax];
            aa[Mpos]=temp;
            count+=1;
            upNsum = (upNsum-Nmin)+Mmax;
            upMsum = (upMsum-Mmax)+Nmin;
        }
    cout<<count<<"\n";
}
return 0;
}
